{"version":3,"sources":["webpack://dkv-docs/./src/components/header.tsx","webpack://dkv-docs/./src/components/sidebar.tsx","webpack://dkv-docs/./src/components/layout.tsx","webpack://dkv-docs/./src/templates/documentation.tsx"],"names":["props","className","Link","to","siteTitle","data","useStaticQuery","allMarkdownRemark","edges","map","node","key","frontmatter","slug","title","site","siteMetadata","children","Date","getFullYear","href","markdownRemark","html","date","dangerouslySetInnerHTML","__html"],"mappings":"gKAiBA,EAdgC,SAAAA,GAAK,OACnC,0BAAQC,UAAU,iBAChB,uBAAKA,UAAU,aACb,wBAAMA,UAAU,kBACd,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAKH,EAAMI,eCoC5B,EAxC0B,WACxB,IAAMC,GAAOC,oBAAe,cAe5B,OACE,uBAAKL,UAAU,WACZI,EAAKE,kBAAkBC,MAAMC,KAAI,YAA8B,IAA3BC,EAA2B,EAA3BA,KACnC,OACE,gBAAC,EAAAR,KAAD,CACES,IAAKD,EAAKE,YAAYC,KACtBZ,UAAU,eACVE,GAAE,IAAMO,EAAKE,YAAYC,MAExBH,EAAKE,YAAYE,YCS9B,EA9BgC,SAAAd,GAAS,MACjCK,GAAOC,oBAAe,aAU5B,OACE,uBAAKL,UAAU,kBACb,gBAAC,EAAD,CAAQG,WAAW,UAAAC,EAAKU,KAAKC,oBAAV,eAAwBF,QAAS,UACpD,gBAAC,EAAD,MACA,uBAAKb,UAAU,WACb,uBAAKA,UAAU,aACb,4BAAOD,EAAMiB,UACb,0BAAQhB,UAAU,iBAAlB,MACU,IAAIiB,MAAOC,cADrB,eACgD,IAC9C,qBAAGC,KAAK,4BAAR,gB,gECyBZ,UAhD+C,SAAApB,GAAS,IAC9CqB,EAAmBrB,EAAMK,KAAzBgB,eACAT,EAAsBS,EAAtBT,YAAaU,EAASD,EAATC,KAErB,OACE,gBAAC,IAAD,KACE,uBAAKrB,UAAU,2BACb,uBAAKA,UAAU,iBACb,uBAAKA,UAAU,eACb,0BAAKW,EAAYE,OACjB,yBAAOb,UAAU,YAAjB,iBAA2CW,EAAYW,OAEzD,uBACEtB,UAAU,wBACVuB,wBAAyB,CAAEC,OAAQH","file":"component---src-templates-documentation-tsx-e585dbd5e785e8acedc3.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Header: React.FC<Props> = props => (\r\n  <header className=\"layout-header\">\r\n    <div className=\"container\">\r\n      <span className=\"heading-1 logo\">\r\n        <Link to=\"/\">{props.siteTitle}</Link>\r\n      </span>\r\n    </div>\r\n  </header>\r\n)\r\n\r\ninterface Props {\r\n  siteTitle: string\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\nimport { useStaticQuery, graphql, Link } from 'gatsby'\n\nconst Sidebar: React.FC = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___order] }) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              title\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className=\"sidebar\">\n      {data.allMarkdownRemark.edges.map(({ node }: { node: Node }) => {\n        return (\n          <Link\n            key={node.frontmatter.slug}\n            className=\"sidebar-link\"\n            to={`/${node.frontmatter.slug}`}\n          >\n            {node.frontmatter.title}\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\ntype Node = {\n  frontmatter: {\n    slug: string\n    title: string\n  }\n}\n\nexport default Sidebar\n","import React, { PropsWithChildren } from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Sidebar from './sidebar'\r\nimport '../static/style.css'\r\n\r\nconst Layout: React.FC<Props> = props => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <div className=\"layout-wrapper\">\r\n      <Header siteTitle={data.site.siteMetadata?.title || 'Title'} />\r\n      <Sidebar />\r\n      <div className=\"content\">\r\n        <div className=\"container\">\r\n          <main>{props.children}</main>\r\n          <footer className=\"layout-footer\">\r\n            &copy; {new Date().getFullYear()}, Built with{' '}\r\n            <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface Props extends PropsWithChildren<any> {}\r\n\r\nexport default Layout\r\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst DocumentationTemplate: React.FC<Props> = props => {\n  const { markdownRemark } = props.data\n  const { frontmatter, html } = markdownRemark\n\n  return (\n    <Layout>\n      <div className=\"documentation-container\">\n        <div className=\"documentation\">\n          <div className=\"page-header\">\n            <h1>{frontmatter.title}</h1>\n            <small className=\"subtitle\">Last updated: {frontmatter.date}</small>\n          </div>\n          <div\n            className=\"documentation-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\ninterface Props {\n  data: {\n    markdownRemark: {\n      html: string\n      frontmatter: {\n        date: string\n        slug: string\n        title: string\n      }\n    }\n  }\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`\n\nexport default DocumentationTemplate\n"],"sourceRoot":""}